#!/usr/bin/env python
#
# cppwriter takes a list of fields and generates a cpp header to
# assist in accessing generated CSRs
#
# All rights reserved
# Tiny Labs Inc
# 2020
#

from ahb3lite_csr import Field, Reg

class CPPWriter:
    def __init__(self, field):
        self.field = field

    def header (self, cid):
        s =  '// This file is autogenerated by csrgen - DO NOT EDIT\n'
        s += '#ifndef ' + cid + '\n'
        s += '#define ' + cid + '\n'
        s += '#include <stdint.h>\n\n'
        s += 'typedef struct {\n'
        return s

    def footer (self, cid, name):
        s =  '} ' + name + ';\n\n'
        s += '#endif /* ' + cid + ' */\n'
        return s
    
    def write(self, filename):
        cid = filename.replace ('.', '_').upper ()
        name = filename[:-2]
        #print ("Writing cpp header: " + filename)
        with open (filename, 'w') as fh:
            
            # Write header
            fh.write (self.header (cid))

            # Write register defs
            s = ''
            reg = None
            pwidth = 32
            for f in self.field:
                if f.rptr[0].reg is not reg:
                    if pwidth != 32:
                        s += '\tuint32_t :0;\n'
                    reg = f.rptr[0].reg
                pwidth = f.width
                if f.count == 1:
                    s += '\t/* ' + f.rtype + ' */ volatile uint32_t ' + f.name
                else:
                    s += '\t/* ' + f.rtype + ' */ volatile uint32_t ' + f.name + '[' + str(f.count) + ']'
                if f.width != 32:
                    s += ' : ' + str(f.width) + ';\n'
                else:
                    s += ';\n'
            fh.write (s)
            
            # Write footer
            fh.write (self.footer (cid, name))
            
