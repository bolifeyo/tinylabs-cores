From 1c12864c78af90ad5d9e96e1c3c825288312da0f Mon Sep 17 00:00:00 2001
From: Elliot Buller <elliot@tinylabs.io>
Date: Sat, 20 Jun 2020 10:37:25 -0600
Subject: [PATCH 1/1] Fix verilator warnings

---
 rtl/verilog/ahb3lite_apb_bridge.sv | 49 +++++++++++++++---------------
 1 file changed, 25 insertions(+), 24 deletions(-)

diff --git a/rtl/verilog/ahb3lite_apb_bridge.sv b/rtl/verilog/ahb3lite_apb_bridge.sv
index 526b724..85b093e 100644
--- a/rtl/verilog/ahb3lite_apb_bridge.sv
+++ b/rtl/verilog/ahb3lite_apb_bridge.sv
@@ -1,3 +1,4 @@
+/* verilator lint_off CASEINCOMPLETE */
 /////////////////////////////////////////////////////////////////////
 //   ,------.                    ,--.                ,--.          //
 //   |  .--. ' ,---.  ,--,--.    |  |    ,---. ,---. `--' ,---.    //
@@ -220,14 +221,14 @@ module ahb3lite_apb_bridge #(
     input [2:0] hsize;
 
     case (hsize)
-       HSIZE_B1024: apb_beats = 1023/PDATA_SIZE; 
-       HSIZE_B512 : apb_beats =  511/PDATA_SIZE;
-       HSIZE_B256 : apb_beats =  255/PDATA_SIZE;
-       HSIZE_B128 : apb_beats =  127/PDATA_SIZE;
-       HSIZE_DWORD: apb_beats =   63/PDATA_SIZE;
-       HSIZE_WORD : apb_beats =   31/PDATA_SIZE;
-       HSIZE_HWORD: apb_beats =   15/PDATA_SIZE;
-       default    : apb_beats =    7/PDATA_SIZE;
+       HSIZE_B1024: apb_beats = 7'(1023/PDATA_SIZE);
+       HSIZE_B512 : apb_beats =  7'(511/PDATA_SIZE);
+       HSIZE_B256 : apb_beats =  7'(255/PDATA_SIZE);
+       HSIZE_B128 : apb_beats =  7'(127/PDATA_SIZE);
+       HSIZE_DWORD: apb_beats =   7'(63/PDATA_SIZE);
+       HSIZE_WORD : apb_beats =   7'(31/PDATA_SIZE);
+       HSIZE_HWORD: apb_beats =   7'(15/PDATA_SIZE);
+       default    : apb_beats =    7'(7/PDATA_SIZE);
     endcase
   endfunction //apb_beats
 
@@ -253,7 +254,7 @@ module ahb3lite_apb_bridge #(
     logic [6:0] haddr_masked;
 
     //Generate masked address
-    haddr_masked = haddr & address_mask(HDATA_SIZE);
+    haddr_masked = haddr[6:0] & address_mask(HDATA_SIZE);
 
     //calculate bit-offset
     data_offset = 8 * haddr_masked;
@@ -269,18 +270,18 @@ module ahb3lite_apb_bridge #(
 
     //get number of active lanes for a 1024bit databus (max width) for this HSIZE
     case (hsize)
-       HSIZE_B1024: full_pstrb = 'hffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff; 
-       HSIZE_B512 : full_pstrb = 'hffff_ffff_ffff_ffff;
-       HSIZE_B256 : full_pstrb = 'hffff_ffff;
-       HSIZE_B128 : full_pstrb = 'hffff;
-       HSIZE_DWORD: full_pstrb = 'hff;
-       HSIZE_WORD : full_pstrb = 'hf;
-       HSIZE_HWORD: full_pstrb = 'h3;
-       default    : full_pstrb = 'h1;
+       HSIZE_B1024: full_pstrb = 128'hffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff;
+       HSIZE_B512 : full_pstrb = 128'hffff_ffff_ffff_ffff;
+       HSIZE_B256 : full_pstrb = 128'hffff_ffff;
+       HSIZE_B128 : full_pstrb = 128'hffff;
+       HSIZE_DWORD: full_pstrb = 128'hff;
+       HSIZE_WORD : full_pstrb = 128'hf;
+       HSIZE_HWORD: full_pstrb = 128'h3;
+       default    : full_pstrb = 128'h1;
     endcase
 
     //generate masked address
-    paddr_masked = paddr & address_mask(PDATA_SIZE);
+    paddr_masked = paddr[6:0] & address_mask(PDATA_SIZE);
 
     //create PSTRB
     pstrb = full_pstrb[PDATA_SIZE/8-1:0] << paddr_masked;
@@ -427,7 +428,7 @@ module ahb3lite_apb_bridge #(
         apb_tack       <= 1'b0;
 
         PSEL    <= 1'b0;
-        PPROT   <= 1'b0;
+        PPROT   <= 3'b0;
         PADDR   <= 'h0;
         PWRITE  <= 1'b0;
         PENABLE <= 1'b0;
@@ -446,11 +447,11 @@ module ahb3lite_apb_bridge #(
 
                  PSEL                 <= 1'b1;
                  PENABLE              <= 1'b0;
-                 PPROT                <= ((ahb_hprot & HPROT_DATA      ) ? PPROT_DATA       : PPROT_INSTRUCTION) |
-                                         ((ahb_hprot & HPROT_PRIVILEGED) ? PPROT_PRIVILEGED : PPROT_NORMAL     );
+                 PPROT                <= ((ahb_hprot & HPROT_DATA      ) != 0 ? PPROT_DATA       : PPROT_INSTRUCTION) |
+                                         ((ahb_hprot & HPROT_PRIVILEGED) != 0 ? PPROT_PRIVILEGED : PPROT_NORMAL     );
                  PADDR                <= ahb_haddr[PADDR_SIZE-1:0];
                  PWRITE               <= ahb_hwrite;
-                 PWDATA               <= ahb_hwdata >> data_offset(ahb_haddr);
+                 PWDATA               <= PDATA_SIZE'(ahb_hwdata >> data_offset(ahb_haddr));
                  PSTRB                <= {PDATA_SIZE/8{ahb_hwrite}} & pstrb(ahb_hsize,ahb_haddr[PADDR_SIZE-1:0]);
 
                  apb_prdata           <= 'h0;                                   //clear prdata
@@ -471,7 +472,7 @@ module ahb3lite_apb_bridge #(
                  apb_beat_cnt         <= apb_beat_cnt -1;
                  apb_beat_data_offset <= apb_beat_data_offset + PDATA_SIZE;
 
-                 apb_prdata           <= (apb_prdata << PDATA_SIZE) | (PRDATA << data_offset(ahb_haddr));//TODO: check/sim
+                 apb_prdata           <= (apb_prdata << PDATA_SIZE) | (HADDR_SIZE'(PRDATA) << data_offset(ahb_haddr));//TODO: check/sim
                  apb_pslverr          <= PSLVERR;
 
                  PENABLE              <= 1'b0;
@@ -496,7 +497,7 @@ module ahb3lite_apb_bridge #(
                      apb_fsm       <= ST_APB_SETUP;
 
                      PADDR  <= PADDR + (1 << ahb_hsize);
-                     PWDATA <= ahb_hwdata >> apb_beat_data_offset;
+                     PWDATA <= PDATA_SIZE'(ahb_hwdata >> apb_beat_data_offset);
                      PSTRB  <= {PDATA_SIZE/8{ahb_hwrite}} & pstrb(ahb_hsize,PADDR + (1 << ahb_hsize));
                  end
              end
-- 
2.20.1

